<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="SearchMapper">
	<resultMap type="MemberVO" id="MemberVO">
		<result column="member_name" property="member_name"/>
		<result column="member_photo" property="member_photo"/>
		<result column="member_business_name" property="member_business_name"/>
	</resultMap>
	<resultMap type="FundingMainVO" id="FundingMainVO">
		<result column="funding_idx" property="funding_idx"/>
		<result column="member_idx" property="member_idx"/>
		<result column="funding_title" property="funding_title"/>
		<result column="funding_target_price" property="funding_target_price"/>
		<result column="funding_current_price" property="funding_current_price"/>
		<result column="funding_start_date" property="funding_start_date"/>
		<result column="funding_end_date" property="funding_end_date"/>
		<result column="funding_permit_state" property="funding_permit_state"/>
		<result column="funding_current_state" property="funding_current_state"/>
		<result column="funding_category" property="funding_category"/>
		<result column="funding_views" property="funding_views"/>
		<result column="funding_thumbnail" property="funding_thumbnail"/>
		<collection property="memberVO" resultMap="MemberVO"></collection>
	</resultMap>
	
	<select id="searchCount" parameterType="FundingMainVO" resultType="int">
		SELECT COUNT(funding_idx)
		FROM funding
		WHERE 1=1 
		AND funding_title LIKE CONCAT('%${keyword}%') 
		AND funding_permit_state = 1
		AND funding_current_state=0
		<choose>
			<when test="all != null">
			</when>
			<when test="dog != null">
				AND funding_category = 0
			</when>
			<when test="cat != null">
				AND funding_category = 1
			</when>
			<when test="other != null">
				AND funding_category = 2
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="searchList" parameterType="FundingMainVO" resultType="FundingMainVO" resultMap="FundingMainVO">
		SELECT 
			fd.funding_idx,
			fd.member_idx,
			fd.funding_title,
			fd.funding_thumbnail,
			fd.funding_target_price,
			fd.funding_current_price,
			fd.funding_start_date,
			fd.funding_end_date,
			fd.funding_permit_state,
			fd.funding_current_state,
			fd.funding_category,
			fd.funding_views,
			mem.member_business_name,
			mem.member_idx
		FROM funding AS fd
		JOIN member AS mem
		ON 	1=1 
			AND fd.funding_title LIKE CONCAT('%${keyword}%')
			AND fd.funding_permit_state = 1
			AND fd.member_idx = mem.member_idx
			AND funding_current_state=0
			<choose>
				<when test="all != null">
				</when>
				<when test="dog != null">
					AND fd.funding_category = 0
				</when>
				<when test="cat != null">
					AND fd.funding_category = 1
				</when>
				<when test="other != null">
					AND fd.funding_category = 2
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<choose>
				<when test="sortNew != null">
					order by funding_idx desc limit #{startRowNum}, 8;
				</when>
				<when test="sortView != null">
					order by funding_views desc limit #{startRowNum}, 8;
				</when>
				<when test="sortPrice != null">
					order by funding_current_price desc limit #{startRowNum}, 8;
				</when>
				<when test="sortdeadline != null">
					order by funding_end_date desc limit #{startRowNum}, 8;
				</when>
				<otherwise>
					order by funding_idx desc limit #{startRowNum}, 8;
				</otherwise>
			</choose>
		<!-- order by fd.funding_idx desc limit #{startRowNum}, 8; -->
	</select>
	
	
	<!-- 스토어 검색 리스트 -->
	<select id="searchStoreList" parameterType="StoreVO" resultType="StoreVO">
		SELECT 
		    s.store_idx,
			s.member_idx,
			s.funding_idx,
			s.store_price,
			s.store_title,
			s.store_thumbnail,
			s.store_content,
			s.store_notice,
			s.store_write_date,
			s.store_permit_state,
			s.store_current_state,
			s.store_category,
			s.store_funding,
			s.store_express_fee,
			s.store_views,
			sr.avg_star
		FROM store s
		LEFT OUTER JOIN (select AVG(sr.store_review_star) as 'avg_star', store_idx from store_review sr group by store_idx) sr
		ON s.store_idx = sr.store_idx 
			AND s.store_idx = sr.store_idx 
			AND store_permit_state=1
			<choose>
				<when test="all != null">
				</when>
				<when test="dog != null">
					AND s.store_category = 0
				</when>
				<when test="cat != null">
					AND s.store_category = 1
				</when>
				<when test="other != null">
					AND s.store_category = 2
				</when>
				<otherwise>
				</otherwise>
			</choose>
		WHERE s.store_title LIKE CONCAT('%${keyword}%')
		<choose>
			<when test="sortNewStore != null">
				order by store_idx desc limit #{startRowNumStore}, 8;
			</when>
			<when test="sortViewStore != null">
				order by store_views desc limit #{startRowNumStore}, 8;
			</when>
			<when test="sortStarStore != null">
				order by sr.avg_star desc limit #{startRowNumStore}, 8;
			</when>
			<when test="sortHighPriceStore != null">
				order by store_price desc limit #{startRowNumStore}, 8;
			</when>
			<when test="sortLowPriceStore != null">
				order by store_price asc limit #{startRowNumStore}, 8;
			</when>
			<otherwise>
				order by store_idx desc limit #{startRowNumStore}, 8;
			</otherwise>
		</choose>
		<!-- order by s.store_idx desc limit #{startRowNumStore}, 8; --> 
	</select>
	
	<select id="searchStoreCount" parameterType="StoreVO" resultType="int">
		SELECT COUNT(store_idx)
		FROM store
		WHERE 1=1 
		AND store_title LIKE CONCAT('%${keyword}%') 
		AND store_permit_state = 1
		<choose>
			<when test="all != null">
			</when>
			<when test="dog != null">
				AND store_category = 0
			</when>
			<when test="cat != null">
				AND store_category = 1
			</when>
			<when test="other != null">
				AND store_category = 2
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	
</mapper>