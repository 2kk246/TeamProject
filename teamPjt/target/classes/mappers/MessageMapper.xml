<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MessageMapper">

	<select id="checkFundingPermit" parameterType="int" resultType="FundingMainVO">
		SELECT  f.member_idx,
				f.funding_idx,
				f.funding_title,
				f.funding_thumbnail,
				f.funding_target_price,
				f.funding_current_price,
				f.funding_start_date,
				f.funding_end_date,
				f.funding_content,
				f.funding_permit_state,
				f.funding_current_state,
				f.funding_category,
				f.funding_views,
				f.funding_express_date,
				f.funding_express_fee
		FROM 	funding f, message m
		WHERE	f.funding_idx = m.funding_idx
		AND 	m.to_member_idx = #{ member_idx }
		ORDER BY m.message_date DESC

	</select>
	
	
	<select id="getMemberIdx" parameterType="int" resultType="int">
		SELECT  member_idx
		FROM	funding
		WHERE	funding_idx = #{ f_idx }
	</select>
	<select id="getMemberIdxStore" parameterType="int" resultType="int">
		SELECT  member_idx
		FROM	store
		WHERE	store_idx = #{ store_idx }
	</select>
	
	<select id="findSellerIdx" parameterType="int" resultType="int">
		SELECT  member_idx
		FROM	funding
		WHERE	funding_idx = #{ funding_idx }
	</select>
	
	<select id="checkLevel" parameterType="int" resultType="int">
		select 	member_level 
		from 	member 
		where 	member_idx=#{member_idx}
	</select>
	
	<!-- 공지 로그 남김  -->
	<insert id="insertLog" parameterType="java.util.HashMap">
		<if test="f_or_s == 0">
		INSERT 
		INTO	message_notice (from_member_idx, to_member_idx, funding_idx, f_or_s, message_content)
		VALUES	(
				#{ from_member_idx },
				#{ to_member_idx }, 
				#{ funding_idx },
				#{ f_or_s },
				#{ message_content }
				)
		</if>
		<if test="f_or_s == 1">
		INSERT 
		INTO	message_notice (from_member_idx, to_member_idx, store_idx, f_or_s, message_content)
		VALUES	(
				#{ from_member_idx },
				#{ to_member_idx }, 
				#{ store_idx },
				#{ f_or_s },
				#{ message_content }
				)
		</if>
	</insert>
	
	<!-- 공지 타임라인 : 최신순으로 온 메세지 나열  -->
	<select id="notice_timeline" parameterType="int" resultType="MessageNoticeVO">
		select  mn.message_notice_idx, mn.f_or_s
		from 	message_notice mn
		where 	mn.to_member_idx=#{to_member_idx}
		order by mn.message_notice_date desc	
	</select>
	<select id="message_notice" parameterType="java.util.HashMap" resultType="MessageNoticeVO">
		SELECT 	m.member_name,
				m.member_photo,
				mn.message_notice_idx, 
				mn.from_member_idx, 
				mn.to_member_idx, 
				mn.f_or_s, 
				mn.message_content, 
				mn.message_notice_date,
		<if test="f_or_s == 0">
				mn.funding_idx, 
				f.funding_title,
				f.funding_thumbnail
		FROM 	message_notice mn, funding f, member m
		WHERE 	mn.funding_idx = f.funding_idx
		AND		m.member_idx = f.member_idx
		</if>		
		<if test="f_or_s == 1">
				mn.store_idx, 
				s.store_title,
				s.store_thumbnail
		FROM 	message_notice mn, store s, member m
		WHERE 	mn.store_idx=s.store_idx
		AND		m.member_idx = s.member_idx
		</if>
		AND		mn.to_member_idx=#{to_member_idx}
		AND 	mn.message_notice_idx=#{message_notice_idx}
	</select>
	
	
	<select id="getFrom_member_idxs" parameterType="int" resultType="MessageVO">
		select 	msd.from_member_idx 
		from(select * from message m
			where 	m.to_member_idx=#{to_member_idx}
			and 	m.message_state=1
			order by m.message_date desc LIMIT 18446744073709551615) msd
		GROUP by msd.from_member_idx
	</select>
	
	<select id="getMessageDialogue" parameterType="java.util.HashMap" resultType="MessageVO">
		select 	m.member_idx,
				m.member_name,
				m.member_photo,
				ms.message_idx,
				ms.from_member_idx,
				ms.to_member_idx,
				ms.funding_idx,
				ms.message_content,
				ms.message_photo,
				ms.message_state,
				ms.message_send_person,
				ms.message_date
		FROM 	message ms, member m 
		WHERE 	ms.from_member_idx = m.member_idx
		AND 	ms.to_member_idx=#{to_member_idx}
		AND 	ms.from_member_idx=#{from_member_idx}
		ORDER BY ms.message_date desc limit 1
	</select>
	
	<select id="message_dialogue" parameterType="int" resultType="MessageVO">
		SELECT 	msd.*
		FROM	(SELECT ms.funding_idx,
						ms.store_idx,
		  		  		m.member_idx,
						m.member_name,
						m.member_photo, 
						mn.message_note_idx,
						mn.message_idx,
						mn.from_member_idx,
						mn.to_member_idx,
						mn.message_content,
						mn.message_photo,
						mn.c_or_p,
						mn.message_note_date 
				FROM 	message_note mn, member m, message ms
						where m.member_idx = mn.from_member_idx 
						and ms.message_idx = mn.message_idx
						and mn.to_member_idx = #{member_idx}
						order by mn.message_note_date desc
				LIMIT 	18446744073709551615) msd
				GROUP BY msd.from_member_idx
	</select>
	
	<select id="message_dialogue_detail" parameterType="java.util.HashMap" resultType="MessageVO">
		SELECT 	ms.funding_idx,
			  	m.member_idx,
				m.member_name,
				m.member_photo, 
				mn.message_note_idx,
				mn.message_idx,
				mn.from_member_idx,
				mn.to_member_idx,
				mn.message_content,
				mn.message_photo,
				mn.c_or_p,
				mn.message_note_date 
		FROM 	message_note mn, member m, message ms
		WHERE 	m.member_idx = mn.from_member_idx 
		AND 	mn.message_idx = ms.message_idx
		AND		ms.message_idx = mn.message_idx
		AND		mn.to_member_idx = #{to_member_idx}
		AND 	ms.funding_idx = #{funding_idx}
		ORDER BY mn.message_note_date
	</select>
	<select id="message_dialogue_detail2" parameterType="int" resultType="MessageVO">
		select 	mn.message_note_idx,
				mn.message_idx,
				mn.from_member_idx,
				mn.to_member_idx,
				mn.message_content,
				mn.message_photo,
				mn.c_or_p,
				mn.message_note_date
		from message_note mn
		where mn.message_idx=#{message_idx}
	</select>
	
	<insert id="sendMessage" parameterType="java.util.HashMap">
		<if test="c_or_p == 0">
		insert into message_note(message_idx, 
								from_member_idx, 
								to_member_idx, 
								message_content,
								c_or_p)
		values(#{message_idx},
				#{from_member_idx},
				#{to_member_idx},
				#{message_content},
				'c')
		</if>
		<if test="c_or_p == 1">
		insert into message_note(message_idx, 
								from_member_idx, 
								to_member_idx, 
								message_content,
								c_or_p)
		values(#{message_idx},
				#{from_member_idx},
				#{to_member_idx},
				#{message_photo},
				'p')
		</if>
	</insert>
	
	<select id="countMessageIdx" parameterType="java.util.HashMap" resultType="int">
		SELECT 	count(mn.message_idx)
		FROM 	message_note mn, message ms
		WHERE	mn.message_idx = ms.message_idx
		AND		mn.from_member_idx = #{from_member_idx}
	<if test="funding_idx != 0">	
		AND 	ms.funding_idx = #{funding_idx}
	</if>
	<if test="store_idx != 0">	
		AND 	ms.store_idx = #{store_idx}
	</if>
	</select>
	
	<select id="findMessageIdx" parameterType="java.util.HashMap" resultType="int">
		SELECT 	ifnull(mn.message_idx,0)
		FROM 	message_note mn, message ms
		WHERE	mn.message_idx = ms.message_idx
		AND		mn.from_member_idx = #{from_member_idx}
		<if test="funding_idx!=0">
		AND 	ms.funding_idx = #{funding_idx} limit 1
		</if>
		<if test="store_idx!=0">
		AND 	ms.store_idx = #{store_idx} limit 1
		</if>
	</select>
	
	<insert id="insertMessageIdx" parameterType="java.util.HashMap">
		<if test="funding_idx != 0">
		insert into message(message_idx,
							funding_idx,
							f_or_s,
							message_category)
		values(default,
				#{funding_idx},
				'f',
				0)
		</if>
		<if test="store_idx != 0">
		insert into message(message_idx,
							store_idx,
							f_or_s,
							message_category)
		values(default,
				#{store_idx},
				's',
				0)
		</if>
	</insert>
	
	<select id="getLastMessageIdx" resultType="int">
		SELECT message_idx 
		FROM message 
		ORDER BY message_date DESC LIMIT 1
	</select>
	
	<select id="getFromMemberIdx" parameterType="java.util.HashMap" resultType="int">
		
		select from_member_idx 
		from message_note mn, message ms 
		where mn.message_idx=ms.message_idx 
		and mn.message_idx=#{message_idx}
		<if test="funding_idx != 0">
		and ms.funding_idx=#{funding_idx}
		</if>
		<if test="funding_idx == 0">
		and ms.store_idx=#{store_idx}
		</if>
		and mn.to_member_idx=#{to_member_idx} limit 1;
	</select>
	
	<!-- 주어진 member_idx로 사진과 이름을 가져옴  -->
	<select id="getPhotoName" parameterType="int" resultType="MemberVO">
		SELECT 	member_photo, member_name 
		FROM 	member 
		WHERE 	member_idx=#{member_idx};
	</select>
	
	<!-- 스케쥴러  -->
	<!-- 펀딩 성공한 리스트 가져오기 FROM, TO, funding_idx -->
	<select id="messageFundingList" resultType="FundingMainVO">
		SELECT 	f.member_idx as from_member_idx, fo.member_idx as to_member_idx, f.funding_idx, f.funding_title
		FROM 	funding_order fo, funding f 
		WHERE 	f.funding_idx = fo.funding_idx
		AND 	f.funding_current_state=1 and fo.funding_order_pay_state=0
	</select>
	<!-- 같은 행이 있는지 체크  -->
	<select id="messageNoticeSameRow" parameterType="java.util.HashMap" resultType="int">
		SELECT 	count(*) 
		FROM 	message_notice 
		WHERE 	from_member_idx = #{from_member_idx}
		AND 	to_member_idx = #{to_member_idx}
		AND 	funding_idx = #{funding_idx}
		AND 	message_content = #{message_content}
	</select>
	<!-- 펀딩 성공 알림 to소비자  -->
</mapper>